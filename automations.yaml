- alias: 'Trigger alarm while armed away'
  trigger:
    - platform: state
      entity_id: light.small
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: armed_away
  action:
    service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.home_alarm

- alias: 'Send notification when alarm triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'triggered'
  action:
    - service: tts.google_translate_say
      entity_id: media_player.bedroom_speaker
      data:
        message: "ALARM! The alarm has been triggered"

- alias: 'Try reconnect to Dyson fan if unavailable for 3 hours'
  trigger:
    - platform: template
      value_template: "{{ is_state_attr('climate.bedroom', 'available', false) }}"
      for: "03:00:00"
  action:
    service: dyson.reconnect
    entity_id: climate.bedroom

- alias: 'Notify Nil when Home Assistant is started (usually from a deploy restart)'
  trigger:
    platform: homeassistant
    event: start
  action:
    service: notify.mobile_app_nils_iphone_xs
    data:
      message: "Home Assistant has been started"
      title: "Home Assistant started"
      data:
        push:
          thread-id: "homeassistant-server-status"

- alias: "Notify phones when iPad battery is running low"
  trigger:
    platform: numeric_state
    entity_id: sensor.ipad_battery_level
    below: 10
  action:
    - service: notify.iphones
      data:
        message: "Charge iPad soon to keep Homekit hub running"
        title: "iPad battery low ({{ states('sensor.ipad_battery_level') }}%)"
        data:
          push:
            thread-id: "ipad-battery-status"
    - condition: state
      entity_id: binary_sensor.someone_home
      state: 'home'
    - service: rest_command.assistant_broadcast
      data:
        command: "iPad battery low. Charge iPad soon to keep Homekit hub running"

# Christmas lights automations
- alias: 'Switch on the balcony christmas lights at night'
  trigger:
    platform: time_pattern
    seconds: "/30"
  condition:
    condition: and
    conditions:
      - condition: time
        after: '17:30:00'
        before: '07:30:00'
      - condition: state
        entity_id: light.christmas_balcony
        state: 'off'
  action:
    service: light.turn_on
    data:
      entity_id: light.christmas_balcony

- alias: 'Switch off the balcony christmas lights by day'
  trigger:
    platform: time_pattern
    seconds: "/30"
  condition:
    condition: and
    conditions:
      - condition: time
        before: '17:30:00'
        after: '07:30:00'
      - condition: state
        entity_id: light.christmas_balcony
        state: 'on'
  action:
    service: light.turn_off
    data:
      entity_id: light.christmas_balcony