# Testing once again: testing github pull permissions
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

frontend:
  themes: !include_dir_merge_named themes

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  ssl_certificate: !secret SSL_CERTIFICATE_PATH
  ssl_key: !secret SSL_KEY_PATH
  base_url: !secret SERVER_BASE_URL

# Text to speech
tts:
  - platform: google_translate
    base_url: !secret TTS_BASE_URL

# Use custom dyson component
better_dyson:
  username: !secret DYSON_USERNAME
  password: !secret DYSON_PASSWORD
  language: !secret DYSON_COUNTRY
  devices:
    - device_id: !secret DYSON_DEVICE_ID
      device_ip: !secret DYSON_DEVICE_IP

#Nest web api component (no WwN)
badnest:
  email: !secret NEST_EMAIL
  password: !secret NEST_PASSWORD
  region: eu

climate:
  - platform: badnest
    scan_interval: 10

sensor:
  - platform: badnest

# Notification groups
notify:
  - name: iphones
    platform: group
    services:
      - service: mobile_app_nils_iphone_xs
      - service: mobile_app_steve_s_iphonex

# Google Assistant relay commands
rest_command:
  assistant_broadcast:
    url: http://localhost:3000/assistant
    method: POST
    content_type: 'application/json'
    payload: '{"command":"{{ command }}"{% if username -%}, "user":"{{ username }}"{%- endif %}, "broadcast":true}'
    
  assistant_converse:
    url: http://localhost:3000/assistant
    method: POST
    content_type: 'application/json'
    payload: '{"command":"{{ command }}"{% if username -%}, "user":"{{ username }}"{%- endif %}, "converse":true}'

  assistant_relay:
    url: http://localhost:3000/assistant
    method: POST
    content_type: 'application/json'
    payload: '{"command":"{{ command }}"{% if username -%}, "user":"{{ username }}"{%- endif %}}'

shell_command:
  restart_homebridge: docker restart homebridge

homekit:
  filter:
    include_domains:
      - light
      - alarm_control_panel
    include_entities:
      - person.nil
      - person.steve
    exclude_entities:
      - light.living_room_sofa
      - light.bedroom_bed
      - light.small
      - light.living_room_table
      - light.christmas_balcony
      - light.christmas_tree
  entity_config:
    alarm_control_panel.home_alarm:
      code: !secret ALARM_CODE

google_assistant:
  project_id: !secret GOOGLE_ASSISTANT_PROJECT_ID
  service_account: !include google-assistant/service_account.json
  report_state: true
  secure_devices_pin: !secret ALARM_CODE
  exposed_domains:
    - fan
    - sensor
    - alarm_control_panel

# Sensor to detect if anyone is at home
person:
binary_sensor:
- platform: template
  sensors:
    someone_home:
      friendly_name: Someone Home
      icon_template: >-
        {% if is_state('binary_sensor.someone_home','on') %}
          mdi:home-account
        {% else %}
          mdi:home-outline
        {% endif %}
      value_template: "{{ is_state('person.nil','home') or  is_state('person.steve','home') }}"

discovery:
  ignore:
    - philips_hue
    - xiaomi_gw
hue:
  bridges:
    - host: !secret HUE_BRIDGE_IP
      allow_hue_groups: false

media_player:
  - platform: philips_android_tv
    name: PhilipsTV
    host: !secret PHILIPS_TV_HOST
    mac: !secret PHILIPS_TV_MAC
    username: !secret PHILIPS_TV_USERNAME
    password: !secret PHILIPS_TV_PASSWORD

homeassistant:
  name: Home
  customize: !include customize.yaml

alarm_control_panel:
  - platform: manual
    name: Home Alarm
    code: !secret ALARM_CODE
    code_arm_required: false
    pending_time: 0
    delay_time: 20
    trigger_time: 60
    disarmed:
      trigger_time: 0
    armed_home:
      pending_time: 0
      delay_time: 0
    armed_away:
      pending_time: 10
      delay_time: 10

timer:
  entrance:
    duration: '00:00:30'

group: !include groups.yaml
automation: !include_dir_merge_list automations
script: !include scripts.yaml
